(ns wisp.interface.sequential
  (:require [wisp.interface.protocol :refer [satisfies?]]))

(defprotocol ICastSequential
  "Interface for data types that can be casted to ISequential"
  (->sequential [source] "Returns ISequential or INil of the given source"))

(defprotocol ISequential
  "Marker interface indicating a persistent collection of sequential items"
  (-first [source])
  (-rest [source]))

(defn sequential?
  [x]
  (satisfies? ISequential x))

(defn seq?
  [x]
  (satisfies? ICastSequential x))

(def seq ->sequential)
