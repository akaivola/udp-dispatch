(ns wisp.writer
  (:require [wisp.interface.writer :refer [IWriter -append writer?]]
            [wisp.interface.writable :refer [IWritable -write]]

            [wisp.core.meta :refer [meta]]
            [wisp.core.protocol :refer [satisfies?]]))

(def writer?
  [x]
  (satisfies? IWriter x))

;; Extend strings so they could be used as writers.
(extend-type string
  IWriter
  (-append [buffer chunk _] (str buffer chunk)))

(defn- -append-form
  [writer form options]
  (-write form writer options))

(defn append [writer chunk options]
  (-append writer chunk options))

(defn write
  [writer form options]
  (if (and (:meta options)
           (meta form))
    ;; TODO: Change to an expression below once macros
    ;; work as expected.
    #_ (-> writer
           (-append "^" options)
           (-append-form (meta form) options)
           (-append " " options)
           (-append-form form))
    (-write form
            (-append (-write (meta form)
                             (-append writer "^" options)
                             options)
                  " "
                  options)
            options)
    (-write form writer options)))
