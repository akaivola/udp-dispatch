(ns wisp.type.symbol
  (:require [wisp.interface.symbol :refer [ISymbol -id symbol?]]
            [wisp.interface.meta :refer [IMeta IWithMeta]]
            [wisp.interface.named :refer [INamed INamespaced]]
            [wisp.interface.equal :refer [IEqual]]
            [wisp.interface.writable :refer [IWritable]]
            [wisp.interface.writer :refer [-append]]
            [wisp.interface.protocol :refer [satisfies?]]))


(deftype Symbol
  [metadata ns name id hash]
  ISymbol
  (-id [_] id)

  Object
  (toString [_] id)

  IMeta
  (-meta [_] metadata)

  IWithMeta
  (-with-meta [_ new-metadata]
    (Symbol. new-metadata ns name id hash))

  IWritable
  (-write [_ writer options]
    (-append id options))

  IEqual
  (-equal [_ other]
    (and (symbol? other)
         (identical? (-id other) id)))

  INamed
  (-name [_] name)

  INamespaced
  (-namespace [_] ns))
