(ns wisp.type.boolean
  (:require [wisp.interface.boolean :refer [IBoolean ICastBoolean boolean?]]
            [wisp.interface.meta :refer [IMeta IWithMeta]]
            [wisp.interface.equal :refer [IEqual]]
            [wisp.interface.writable :refer [IWritable]]
            [wisp.interface.writer :refer [-append]]
            [wisp.interface.protocol :refer [satisfies?]]))

(deftype BooleanWithMetadata
  [value metadata]
  IBoolean

  Object
  (toString [_] (.toString value))
  (valueOf [_] value)

  IMeta
  (-meta [_] metadata)

  IWithMeta
  (-with-meta [_ new-metadata] (BooleanWithMetadata. value new-metadata))

  ICastBoolean
  (->boolean [_] value)

  IWritable
  (-write [_ writer options]
          (-append writer (if value "true" "false")))

  IEqual
  (-equal [_ other] (or (identical? value other)
                        (and (boolean? other)
                             (identical? (->boolean other) value)))))

(extend-type boolean
  IBoolean

  IMeta
  (-meta [_] nil)

  IWithMeta
  (-with-meta [value metadata] (BooleanWithMetadata. value metadata))

  ICastBoolean
  (->boolean [value] value)

  IWritable
  (-write [value writer options]
          (-append writer (if value "true" "false")))

  IEquiv
  (-equal [value other] (or (identical? value other)
                            (and (satisfies? IBoolean other)
                                 (identical? (->boolean other) value)))))
